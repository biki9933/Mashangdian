{"remainingRequest":"D:\\git\\Mashangdian\\Vue\\saoma-diancan-pc\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\git\\Mashangdian\\Vue\\saoma-diancan-pc\\src\\page\\table-number\\table.vue?vue&type=script&lang=js","dependencies":[{"path":"D:\\git\\Mashangdian\\Vue\\saoma-diancan-pc\\src\\page\\table-number\\table.vue","mtime":1733924179598},{"path":"D:\\git\\Mashangdian\\Vue\\saoma-diancan-pc\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1733062317302},{"path":"D:\\git\\Mashangdian\\Vue\\saoma-diancan-pc\\node_modules\\babel-loader\\lib\\index.js","mtime":1733062318538},{"path":"D:\\git\\Mashangdian\\Vue\\saoma-diancan-pc\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1733062317302},{"path":"D:\\git\\Mashangdian\\Vue\\saoma-diancan-pc\\node_modules\\vue-loader\\lib\\index.js","mtime":1733062316941}],"contextDependencies":[],"result":["\nimport { mapGetters } from 'vuex'\nimport { BASE_URL } from '@/config'\n\nexport default {\n  data() {\n    return {\n      loading: false,\n      tableList: [],\n      dialogVisible: false,\n      dialogType: 'add',\n      submitLoading: false,\n      tableForm: {\n        id: '',\n        tableNumber: '',\n        merchantId: ''\n      },\n      rules: {\n        tableNumber: [\n          { required: true, message: '请输入桌号', trigger: 'blur' },\n          { min: 1, max: 20, message: '长度在 1 到 20 个字符', trigger: 'blur' }\n        ]\n      },\n      baseUrl: BASE_URL\n    }\n  },\n  \n  computed: {\n    ...mapGetters(['currentMerchant']),\n    dialogTitle() {\n      return this.dialogType === 'add' ? '新增桌号' : '编辑桌号'\n    }\n  },\n  \n  created() {\n    this.getTableList()\n  },\n  \n  methods: {\n    // 获取桌号列表\n    async getTableList() {\n      this.loading = true\n      try {\n        const params = {\n          merchantId: this.currentMerchant.id\n        }\n        const res = await new this.Request('/admin/table/list').modepost(params)\n        \n        if (res.code === 0) {\n          this.tableList = res.tableList || []\n        } else {\n          this.$message.error(res.msg || '获取桌号列表失败')\n        }\n      } catch (error) {\n        console.error('获取桌号列表失败：', error)\n        this.$message.error('获取桌号列表失败')\n      } finally {\n        this.loading = false\n      }\n    },\n    \n    // 显示新增弹窗\n    showAddDialog() {\n      this.dialogType = 'add'\n      this.tableForm = {\n        tableNumber: '',\n        merchantId: this.currentMerchant.id\n      }\n      this.dialogVisible = true\n    },\n    \n    // 显示编辑弹窗\n    showEditDialog(table) {\n      this.dialogType = 'edit'\n      this.tableForm = {\n        id: table.id,\n        tableNumber: table.number,\n        merchantId: this.currentMerchant.id\n      }\n      this.dialogVisible = true\n    },\n    \n    // 提交表单\n    submitForm() {\n      this.$refs.tableForm.validate(async valid => {\n        if (valid) {\n          this.submitLoading = true\n          try {\n            const url = this.dialogType === 'add' \n              ? this.Urls.admin.tableAdd\n              : this.Urls.admin.tableUpdate\n            \n            const params = {\n              number: this.tableForm.tableNumber,\n              merchantId: this.currentMerchant.id\n            }\n            \n            // 如果是编辑模式，添加id\n            if (this.dialogType === 'edit') {\n              params.id = this.tableForm.id\n            }\n            \n            console.log('提交的数据：', params)\n            \n            const res = await new this.Request(url, params).modepost()\n            \n            if (res.code === 0) {\n              this.$message.success(`${this.dialogType === 'add' ? '新增' : '编辑'}成功`)\n              this.dialogVisible = false\n              this.getTableList()\n            } else {\n              this.$message.error(res.msg || `${this.dialogType === 'add' ? '新增' : '编辑'}失败`)\n            }\n          } catch (error) {\n            console.error('提交失败：', error)\n            this.$message.error(`${this.dialogType === 'add' ? '新增' : '编辑'}失败`)\n          } finally {\n            this.submitLoading = false\n          }\n        }\n      })\n    },\n    \n    // 生成二维码\n    async generateQRCode(table) {\n      try {\n        const params = {\n          id: table.id,\n          number: table.number,\n          merchantId: this.currentMerchant.id\n        }\n        const res = await new this.Request(this.Urls.admin.tableQrcode, params).modepost()\n        \n        if (res.code === 0) {\n          this.$message.success('二维码生成成功')\n          this.getTableList()\n        } else {\n          this.$message.error(res.msg || '二维码生成失败')\n        }\n      } catch (error) {\n        console.error('生成二维码失败：', error)\n        this.$message.error('二维码生成失败')\n      }\n    },\n    \n    // 删除桌号\n    async deleteTable(table) {\n      try {\n        await this.$confirm('确认删除该桌号吗？删除后无法恢复', '提示', {\n          type: 'warning'\n        })\n        \n        const res = await new this.Request(this.Urls.admin.tableDelete(table.id)).modedelete()\n        \n        if (res.code === 0) {\n          this.$message.success('删除成功')\n          this.getTableList()\n        } else {\n          this.$message.error(res.msg || '删除失败')\n        }\n      } catch (error) {\n        if (error !== 'cancel') {\n          console.error('删除失败：', error)\n          this.$message.error('删除失败')\n        }\n      }\n    },\n    \n    // 格式化日期\n    formatDate(date) {\n      if (!date) return '--'\n      const d = new Date(date)\n      const year = d.getFullYear()\n      const month = String(d.getMonth() + 1).padStart(2, '0')\n      const day = String(d.getDate()).padStart(2, '0')\n      const hour = String(d.getHours()).padStart(2, '0')\n      const minute = String(d.getMinutes()).padStart(2, '0')\n      return `${year}-${month}-${day} ${hour}:${minute}`\n    },\n    \n    // 图片加载成功\n    handleImageLoad(e) {\n      console.log('二维码加载成功:', e);\n    },\n    \n    // 图片加载失败\n    handleImageError(e) {\n      console.error('二维码加载失败:', e);\n    }\n  }\n}\n",{"version":3,"sources":["table.vue"],"names":[],"mappings":";AA2FA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA","file":"table.vue","sourceRoot":"src/page/table-number","sourcesContent":["<template>\n  <div class=\"table-container\">\n    <!-- 操作栏 -->\n    <div class=\"operation-bar\">\n      <el-button type=\"primary\" @click=\"showAddDialog\">新增桌号</el-button>\n    </div>\n\n    <!-- 桌号列表 -->\n    <el-table \n      :data=\"tableList\" \n      border\n      v-loading=\"loading\"\n      element-loading-text=\"加载中...\">\n      <el-table-column type=\"index\" label=\"序号\" width=\"60\" align=\"center\"></el-table-column>\n      <el-table-column prop=\"number\" label=\"桌号\" min-width=\"120\"></el-table-column>\n      <el-table-column label=\"二维码\" width=\"120\" align=\"center\">\n        <template slot-scope=\"scope\">\n          <el-image \n            v-if=\"scope.row.qrcode\"\n            :src=\"`${baseUrl}/image/qrcode/${scope.row.qrcode}`\"\n            :preview-src-list=\"[`${baseUrl}/image/qrcode/${scope.row.qrcode}`]\"\n            class=\"qr-code-image\"\n            @load=\"handleImageLoad\"\n            @error=\"handleImageError\">\n            <div slot=\"error\" class=\"image-slot\">\n              <i class=\"el-icon-picture-outline\"></i>\n            </div>\n            <div slot=\"placeholder\" class=\"image-slot\">\n              <i class=\"el-icon-loading\"></i>\n            </div>\n          </el-image>\n          <el-button v-else size=\"mini\" type=\"text\" @click=\"generateQRCode(scope.row)\">\n            生成二维码\n          </el-button>\n        </template>\n      </el-table-column>\n      <el-table-column label=\"状态\" width=\"100\" align=\"center\">\n        <template slot-scope=\"scope\">\n          <el-tag :type=\"scope.row.status ? 'success' : 'info'\">\n            {{scope.row.status ? '空闲' : '占用'}}\n          </el-tag>\n        </template>\n      </el-table-column>\n      <el-table-column prop=\"create_time\" label=\"创建时间\" width=\"180\" align=\"center\">\n        <template slot-scope=\"scope\">\n          {{formatDate(scope.row.create_time)}}\n        </template>\n      </el-table-column>\n      <el-table-column label=\"操作\" width=\"250\" align=\"center\">\n        <template slot-scope=\"scope\">\n          <el-button \n            type=\"primary\" \n            size=\"mini\" \n            icon=\"el-icon-edit\"\n            @click=\"showEditDialog(scope.row)\">\n            编辑\n          </el-button>\n          <el-button \n            type=\"success\" \n            size=\"mini\" \n            icon=\"el-icon-refresh\"\n            @click=\"generateQRCode(scope.row)\">\n            重新生成二维码\n          </el-button>\n          <el-button \n            type=\"danger\" \n            size=\"mini\" \n            icon=\"el-icon-delete\"\n            @click=\"deleteTable(scope.row)\">\n            删除\n          </el-button>\n        </template>\n      </el-table-column>\n    </el-table>\n\n    <!-- 新增/编辑桌号弹窗 -->\n    <el-dialog :title=\"dialogTitle\" :visible.sync=\"dialogVisible\" width=\"30%\">\n      <el-form :model=\"tableForm\" :rules=\"rules\" ref=\"tableForm\" label-width=\"80px\">\n        <el-form-item label=\"桌号\" prop=\"tableNumber\">\n          <el-input v-model=\"tableForm.tableNumber\" placeholder=\"请输入桌号\"></el-input>\n        </el-form-item>\n      </el-form>\n      <div slot=\"footer\" class=\"dialog-footer\">\n        <el-button @click=\"dialogVisible = false\">取 消</el-button>\n        <el-button type=\"primary\" @click=\"submitForm\" :loading=\"submitLoading\">确 定</el-button>\n      </div>\n    </el-dialog>\n  </div>\n</template>\n\n<script>\nimport { mapGetters } from 'vuex'\nimport { BASE_URL } from '@/config'\n\nexport default {\n  data() {\n    return {\n      loading: false,\n      tableList: [],\n      dialogVisible: false,\n      dialogType: 'add',\n      submitLoading: false,\n      tableForm: {\n        id: '',\n        tableNumber: '',\n        merchantId: ''\n      },\n      rules: {\n        tableNumber: [\n          { required: true, message: '请输入桌号', trigger: 'blur' },\n          { min: 1, max: 20, message: '长度在 1 到 20 个字符', trigger: 'blur' }\n        ]\n      },\n      baseUrl: BASE_URL\n    }\n  },\n  \n  computed: {\n    ...mapGetters(['currentMerchant']),\n    dialogTitle() {\n      return this.dialogType === 'add' ? '新增桌号' : '编辑桌号'\n    }\n  },\n  \n  created() {\n    this.getTableList()\n  },\n  \n  methods: {\n    // 获取桌号列表\n    async getTableList() {\n      this.loading = true\n      try {\n        const params = {\n          merchantId: this.currentMerchant.id\n        }\n        const res = await new this.Request('/admin/table/list').modepost(params)\n        \n        if (res.code === 0) {\n          this.tableList = res.tableList || []\n        } else {\n          this.$message.error(res.msg || '获取桌号列表失败')\n        }\n      } catch (error) {\n        console.error('获取桌号列表失败：', error)\n        this.$message.error('获取桌号列表失败')\n      } finally {\n        this.loading = false\n      }\n    },\n    \n    // 显示新增弹窗\n    showAddDialog() {\n      this.dialogType = 'add'\n      this.tableForm = {\n        tableNumber: '',\n        merchantId: this.currentMerchant.id\n      }\n      this.dialogVisible = true\n    },\n    \n    // 显示编辑弹窗\n    showEditDialog(table) {\n      this.dialogType = 'edit'\n      this.tableForm = {\n        id: table.id,\n        tableNumber: table.number,\n        merchantId: this.currentMerchant.id\n      }\n      this.dialogVisible = true\n    },\n    \n    // 提交表单\n    submitForm() {\n      this.$refs.tableForm.validate(async valid => {\n        if (valid) {\n          this.submitLoading = true\n          try {\n            const url = this.dialogType === 'add' \n              ? this.Urls.admin.tableAdd\n              : this.Urls.admin.tableUpdate\n            \n            const params = {\n              number: this.tableForm.tableNumber,\n              merchantId: this.currentMerchant.id\n            }\n            \n            // 如果是编辑模式，添加id\n            if (this.dialogType === 'edit') {\n              params.id = this.tableForm.id\n            }\n            \n            console.log('提交的数据：', params)\n            \n            const res = await new this.Request(url, params).modepost()\n            \n            if (res.code === 0) {\n              this.$message.success(`${this.dialogType === 'add' ? '新增' : '编辑'}成功`)\n              this.dialogVisible = false\n              this.getTableList()\n            } else {\n              this.$message.error(res.msg || `${this.dialogType === 'add' ? '新增' : '编辑'}失败`)\n            }\n          } catch (error) {\n            console.error('提交失败：', error)\n            this.$message.error(`${this.dialogType === 'add' ? '新增' : '编辑'}失败`)\n          } finally {\n            this.submitLoading = false\n          }\n        }\n      })\n    },\n    \n    // 生成二维码\n    async generateQRCode(table) {\n      try {\n        const params = {\n          id: table.id,\n          number: table.number,\n          merchantId: this.currentMerchant.id\n        }\n        const res = await new this.Request(this.Urls.admin.tableQrcode, params).modepost()\n        \n        if (res.code === 0) {\n          this.$message.success('二维码生成成功')\n          this.getTableList()\n        } else {\n          this.$message.error(res.msg || '二维码生成失败')\n        }\n      } catch (error) {\n        console.error('生成二维码失败：', error)\n        this.$message.error('二维码生成失败')\n      }\n    },\n    \n    // 删除桌号\n    async deleteTable(table) {\n      try {\n        await this.$confirm('确认删除该桌号吗？删除后无法恢复', '提示', {\n          type: 'warning'\n        })\n        \n        const res = await new this.Request(this.Urls.admin.tableDelete(table.id)).modedelete()\n        \n        if (res.code === 0) {\n          this.$message.success('删除成功')\n          this.getTableList()\n        } else {\n          this.$message.error(res.msg || '删除失败')\n        }\n      } catch (error) {\n        if (error !== 'cancel') {\n          console.error('删除失败：', error)\n          this.$message.error('删除失败')\n        }\n      }\n    },\n    \n    // 格式化日期\n    formatDate(date) {\n      if (!date) return '--'\n      const d = new Date(date)\n      const year = d.getFullYear()\n      const month = String(d.getMonth() + 1).padStart(2, '0')\n      const day = String(d.getDate()).padStart(2, '0')\n      const hour = String(d.getHours()).padStart(2, '0')\n      const minute = String(d.getMinutes()).padStart(2, '0')\n      return `${year}-${month}-${day} ${hour}:${minute}`\n    },\n    \n    // 图片加载成功\n    handleImageLoad(e) {\n      console.log('二维码加载成功:', e);\n    },\n    \n    // 图片加载失败\n    handleImageError(e) {\n      console.error('二维码加载失败:', e);\n    }\n  }\n}\n</script>\n\n<style scoped>\n.table-container {\n  padding: 20px;\n}\n\n.operation-bar {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 20px;\n  background: #f5f7fa;\n  padding: 15px;\n  border-radius: 4px;\n}\n\n.qr-code-image {\n  width: 60px;\n  height: 60px;\n  border-radius: 4px;\n  cursor: pointer;\n}\n\n.image-slot {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 100%;\n  height: 100%;\n  background: #f5f7fa;\n  color: #909399;\n  font-size: 20px;\n}\n\n.el-button + .el-button {\n  margin-left: 10px;\n}\n\n.el-tag {\n  min-width: 60px;\n}\n</style>\n"]}]}