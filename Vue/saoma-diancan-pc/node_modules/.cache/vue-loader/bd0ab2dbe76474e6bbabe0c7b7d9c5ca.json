{"remainingRequest":"D:\\git\\Mashangdian\\Vue\\saoma-diancan-pc\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\git\\Mashangdian\\Vue\\saoma-diancan-pc\\src\\page\\category\\category.vue?vue&type=style&index=0&id=895df9f0&scoped=true&lang=css","dependencies":[{"path":"D:\\git\\Mashangdian\\Vue\\saoma-diancan-pc\\src\\page\\category\\category.vue","mtime":1733924148654},{"path":"D:\\git\\Mashangdian\\Vue\\saoma-diancan-pc\\node_modules\\css-loader\\index.js","mtime":1733062317246},{"path":"D:\\git\\Mashangdian\\Vue\\saoma-diancan-pc\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1733062317040},{"path":"D:\\git\\Mashangdian\\Vue\\saoma-diancan-pc\\node_modules\\postcss-loader\\src\\index.js","mtime":1733062317103},{"path":"D:\\git\\Mashangdian\\Vue\\saoma-diancan-pc\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1733062317302},{"path":"D:\\git\\Mashangdian\\Vue\\saoma-diancan-pc\\node_modules\\vue-loader\\lib\\index.js","mtime":1733062316941}],"contextDependencies":[],"result":["\r\n.page-container {\r\n  padding: 20px;\r\n}\r\n\r\n.page-title {\r\n  font-size: 20px;\r\n  font-weight: bold;\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.content-container {\r\n  background: #fff;\r\n  padding: 20px;\r\n  border-radius: 4px;\r\n}\r\n\r\n.operation-bar {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.category-table {\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.form-tip {\r\n  font-size: 12px;\r\n  color: #909399;\r\n  margin-top: 5px;\r\n}\r\n\r\n.delete-btn {\r\n  color: #F56C6C;\r\n  margin-left: 10px;\r\n}\r\n\r\n.delete-btn:hover {\r\n  color: #ff4d4f;\r\n}\r\n\r\n.el-dialog__body {\r\n  padding: 20px 40px;\r\n}\r\n",{"version":3,"sources":["category.vue"],"names":[],"mappings":";AAyQA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA","file":"category.vue","sourceRoot":"src/page/category","sourcesContent":["<template>\r\n  <div class=\"page-container\">\r\n    <div class=\"page-title\">菜品类目管理</div>\r\n    \r\n    <div class=\"content-container\">\r\n      <!-- 操作栏 -->\r\n      <div class=\"operation-bar\">\r\n        <div class=\"left\">\r\n          <el-button type=\"primary\" @click=\"showAddDialog\" icon=\"el-icon-plus\">新增分类</el-button>\r\n        </div>\r\n        <div class=\"right\">\r\n          <!-- 如果需要添加搜索或其他功能可以放在这里 -->\r\n        </div>\r\n      </div>\r\n\r\n      <!-- 分类列表 -->\r\n      <el-table \r\n        :data=\"categoryList\" \r\n        border \r\n        v-loading=\"loading\"\r\n        element-loading-text=\"加载中...\"\r\n        class=\"category-table\">\r\n        <el-table-column prop=\"name\" label=\"分类名称\" min-width=\"150\"></el-table-column>\r\n        <el-table-column prop=\"value\" label=\"分类值\" min-width=\"120\"></el-table-column>\r\n        <el-table-column prop=\"sort\" label=\"排序\" width=\"100\" align=\"center\"></el-table-column>\r\n        <el-table-column prop=\"count\" label=\"菜品数量\" width=\"100\" align=\"center\"></el-table-column>\r\n        <el-table-column label=\"操作\" width=\"200\" align=\"center\">\r\n          <template slot-scope=\"scope\">\r\n            <el-button \r\n              type=\"text\" \r\n              icon=\"el-icon-edit\"\r\n              @click=\"showEditDialog(scope.row)\">\r\n              编辑\r\n            </el-button>\r\n            <el-button \r\n              type=\"text\" \r\n              icon=\"el-icon-delete\"\r\n              class=\"delete-btn\"\r\n              @click=\"deleteCategory(scope.row)\">\r\n              删除\r\n            </el-button>\r\n          </template>\r\n        </el-table-column>\r\n      </el-table>\r\n    </div>\r\n\r\n    <!-- 新增/编辑分类弹窗 -->\r\n    <el-dialog \r\n      :title=\"dialogTitle\" \r\n      :visible.sync=\"dialogVisible\" \r\n      width=\"500px\"\r\n      :close-on-click-modal=\"false\"\r\n      @close=\"resetForm\">\r\n      <el-form \r\n        :model=\"categoryForm\" \r\n        :rules=\"rules\" \r\n        ref=\"categoryForm\" \r\n        label-width=\"100px\"\r\n        class=\"category-form\">\r\n        <el-form-item label=\"分类名称\" prop=\"name\">\r\n          <el-input \r\n            v-model=\"categoryForm.name\" \r\n            placeholder=\"请输入分类名称\"\r\n            maxlength=\"20\"\r\n            show-word-limit>\r\n          </el-input>\r\n        </el-form-item>\r\n        <el-form-item label=\"分类值\" prop=\"value\">\r\n          <el-input \r\n            v-model=\"categoryForm.value\" \r\n            placeholder=\"请输入分类值\"\r\n            maxlength=\"20\">\r\n          </el-input>\r\n        </el-form-item>\r\n        <el-form-item label=\"排序\" prop=\"sort\">\r\n          <el-input-number \r\n            v-model=\"categoryForm.sort\" \r\n            :min=\"0\" \r\n            :max=\"99\"\r\n            controls-position=\"right\">\r\n          </el-input-number>\r\n          <div class=\"form-tip\">数值越小越靠前</div>\r\n        </el-form-item>\r\n      </el-form>\r\n      <div slot=\"footer\" class=\"dialog-footer\">\r\n        <el-button @click=\"dialogVisible = false\">取 消</el-button>\r\n        <el-button \r\n          type=\"primary\" \r\n          @click=\"submitForm\" \r\n          :loading=\"submitLoading\">\r\n          确 定\r\n        </el-button>\r\n      </div>\r\n    </el-dialog>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { mapGetters } from 'vuex'\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      loading: false,\r\n      categoryList: [],\r\n      dialogVisible: false,\r\n      dialogType: 'add',\r\n      submitLoading: false,\r\n      categoryForm: {\r\n        name: '',\r\n        value: '',\r\n        sort: 0,\r\n        count: 0\r\n      },\r\n      rules: {\r\n        name: [\r\n          { required: true, message: '请输入分类名称', trigger: 'blur' },\r\n          { min: 2, max: 20, message: '长度在 2 到 20 个字符', trigger: 'blur' }\r\n        ],\r\n        value: [\r\n          { required: true, message: '请输入分类值', trigger: 'blur' },\r\n          { min: 2, max: 20, message: '长度在 2 到 20 个字符', trigger: 'blur' }\r\n        ],\r\n        sort: [\r\n          { required: true, message: '请输入排序号', trigger: 'blur' }\r\n        ]\r\n      }\r\n    }\r\n  },\r\n  \r\n  computed: {\r\n    ...mapGetters(['currentMerchant']),\r\n    dialogTitle() {\r\n      return this.dialogType === 'add' ? '新增分类' : '编辑分类'\r\n    }\r\n  },\r\n  \r\n  created() {\r\n    this.getCategoryList()\r\n  },\r\n  \r\n  methods: {\r\n    async getCategoryList() {\r\n      this.loading = true\r\n      try {\r\n        const params = {\r\n          merchantId: this.currentMerchant.id\r\n        }\r\n        \r\n        const res = await new this.Request('/admin/category/list').modepost(params)\r\n        \r\n        if (res.code === 0) {\r\n          this.categoryList = res.categoryList.map(item => ({\r\n            id: item.id,\r\n            merchantId: item.merchantId,\r\n            name: item.name,\r\n            value: item.value,\r\n            sort: item.sort || 0,\r\n            count: item.count || 0,\r\n            cid: item.cid || ''\r\n          }))\r\n        } else {\r\n          this.$message.error(res.msg || '获取分类列表失败')\r\n        }\r\n      } catch (error) {\r\n        console.error('获取分类列表失败：', error)\r\n        this.$message.error('获取分类列表失败')\r\n      } finally {\r\n        this.loading = false\r\n      }\r\n    },\r\n    \r\n    showAddDialog() {\r\n      this.dialogType = 'add'\r\n      this.categoryForm = {\r\n        name: '',\r\n        value: '',\r\n        sort: 0,\r\n        count: 0,\r\n        merchantId: this.currentMerchant.id\r\n      }\r\n      this.dialogVisible = true\r\n    },\r\n    \r\n    showEditDialog(category) {\r\n      this.dialogType = 'edit'\r\n      this.categoryForm = {\r\n        id: category.id,\r\n        merchantId: category.merchantId,\r\n        name: category.name,\r\n        value: category.value,\r\n        sort: category.sort || 0,\r\n        count: category.count || 0\r\n      }\r\n      this.dialogVisible = true\r\n    },\r\n\r\n    resetForm() {\r\n  if (this.$refs.categoryForm) {\r\n    this.$refs.categoryForm.resetFields();\r\n  }\r\n},\r\n    \r\n    submitForm() {\r\n      this.$refs.categoryForm.validate(async valid => {\r\n        if (valid) {\r\n          this.submitLoading = true\r\n          try {\r\n            const url = this.dialogType === 'add' \r\n              ? this.Urls.admin.categoryAdd\r\n              : this.Urls.admin.categoryUpdate\r\n            \r\n            const data = {\r\n              ...this.categoryForm\r\n            }\r\n            \r\n            const res = await new this.Request(url, data).modepost()\r\n            \r\n            if (res.code === 0) {\r\n              this.$message.success(`${this.dialogType === 'add' ? '新增' : '编辑'}成功`)\r\n              this.dialogVisible = false\r\n              this.getCategoryList()\r\n            } else {\r\n              this.$message.error(res.msg || `${this.dialogType === 'add' ? '新增' : '编辑'}失败`)\r\n            }\r\n          } catch (error) {\r\n            console.error('提交分类失败：', error)\r\n            this.$message.error(`${this.dialogType === 'add' ? '新增' : '编辑'}失败`)\r\n          } finally {\r\n            this.submitLoading = false\r\n          }\r\n        }\r\n      })\r\n    },\r\n    \r\n    async deleteCategory(category) {\r\n      try {\r\n        await this.$confirm(`确认删除分类\"${category.name}\"吗？`, '提示', {\r\n          type: 'warning',\r\n          confirmButtonText: '确定',\r\n          cancelButtonText: '取消'\r\n        })\r\n        \r\n        const res = await new this.Request(\r\n          this.Urls.admin.categoryDelete(category.id)\r\n        ).modedelete()\r\n        \r\n        if (res.code === 0) {\r\n          this.$message.success('删除成功')\r\n          this.getCategoryList()\r\n        } else {\r\n          this.$message.error(res.msg || '删除失败')\r\n        }\r\n      } catch (error) {\r\n        if (error !== 'cancel') {\r\n          console.error('删除分类失败：', error)\r\n          this.$message.error('删除失败')\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.page-container {\r\n  padding: 20px;\r\n}\r\n\r\n.page-title {\r\n  font-size: 20px;\r\n  font-weight: bold;\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.content-container {\r\n  background: #fff;\r\n  padding: 20px;\r\n  border-radius: 4px;\r\n}\r\n\r\n.operation-bar {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.category-table {\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.form-tip {\r\n  font-size: 12px;\r\n  color: #909399;\r\n  margin-top: 5px;\r\n}\r\n\r\n.delete-btn {\r\n  color: #F56C6C;\r\n  margin-left: 10px;\r\n}\r\n\r\n.delete-btn:hover {\r\n  color: #ff4d4f;\r\n}\r\n\r\n.el-dialog__body {\r\n  padding: 20px 40px;\r\n}\r\n</style>"]}]}