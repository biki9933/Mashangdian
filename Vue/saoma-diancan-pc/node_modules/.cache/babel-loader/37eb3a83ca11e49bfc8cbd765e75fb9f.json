{"remainingRequest":"D:\\git\\Mashangdian\\Vue\\saoma-diancan-pc\\node_modules\\babel-loader\\lib\\index.js!D:\\git\\Mashangdian\\Vue\\saoma-diancan-pc\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\git\\Mashangdian\\Vue\\saoma-diancan-pc\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\git\\Mashangdian\\Vue\\saoma-diancan-pc\\src\\page\\order\\order.vue?vue&type=script&lang=js","dependencies":[{"path":"D:\\git\\Mashangdian\\Vue\\saoma-diancan-pc\\src\\page\\order\\order.vue","mtime":1733924128057},{"path":"D:\\git\\Mashangdian\\Vue\\saoma-diancan-pc\\babel.config.js","mtime":1618227600000},{"path":"D:\\git\\Mashangdian\\Vue\\saoma-diancan-pc\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1733062317302},{"path":"D:\\git\\Mashangdian\\Vue\\saoma-diancan-pc\\node_modules\\babel-loader\\lib\\index.js","mtime":1733062318538},{"path":"D:\\git\\Mashangdian\\Vue\\saoma-diancan-pc\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1733062317302},{"path":"D:\\git\\Mashangdian\\Vue\\saoma-diancan-pc\\node_modules\\vue-loader\\lib\\index.js","mtime":1733062316941}],"contextDependencies":[],"result":["import \"core-js/modules/es6.array.is-array\";\nimport \"core-js/modules/es7.symbol.async-iterator\";\nimport \"core-js/modules/es6.symbol\";\nimport \"core-js/modules/es6.array.from\";\nimport \"core-js/modules/es6.regexp.to-string\";\nimport \"core-js/modules/es6.date.to-string\";\nimport \"core-js/modules/es6.object.define-property\";\nimport \"core-js/modules/es6.object.define-properties\";\nimport \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/es6.array.for-each\";\nimport \"core-js/modules/es6.array.filter\";\nimport \"core-js/modules/es6.object.keys\";\nimport \"core-js/modules/es7.string.pad-start\";\nimport \"core-js/modules/es6.function.name\";\nimport \"core-js/modules/es6.array.map\";\nimport \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"D:/git/Mashangdian/Vue/saoma-diancan-pc/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _defineProperty from \"D:/git/Mashangdian/Vue/saoma-diancan-pc/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.string.iterator\";\nimport \"core-js/modules/es6.set\";\nfunction _createForOfIteratorHelper(r, e) { var t = \"undefined\" != typeof Symbol && r[Symbol.iterator] || r[\"@@iterator\"]; if (!t) { if (Array.isArray(r) || (t = _unsupportedIterableToArray(r)) || e && r && \"number\" == typeof r.length) { t && (r = t); var _n = 0, F = function F() {}; return { s: F, n: function n() { return _n >= r.length ? { done: !0 } : { done: !1, value: r[_n++] }; }, e: function e(r) { throw r; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var o, a = !0, u = !1; return { s: function s() { t = t.call(r); }, n: function n() { var r = t.next(); return a = r.done, r; }, e: function e(r) { u = !0, o = r; }, f: function f() { try { a || null == t.return || t.return(); } finally { if (u) throw o; } } }; }\nfunction _unsupportedIterableToArray(r, a) { if (r) { if (\"string\" == typeof r) return _arrayLikeToArray(r, a); var t = {}.toString.call(r).slice(8, -1); return \"Object\" === t && r.constructor && (t = r.constructor.name), \"Map\" === t || \"Set\" === t ? Array.from(r) : \"Arguments\" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? _arrayLikeToArray(r, a) : void 0; } }\nfunction _arrayLikeToArray(r, a) { (null == a || a > r.length) && (a = r.length); for (var e = 0, n = Array(a); e < a; e++) n[e] = r[e]; return n; }\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\n// 交状态\nimport { staff } from \"../../../config/state-type.js\";\nimport { mapGetters } from 'vuex';\n// 价格补领\nvar Price = require('e-commerce_price');\nexport default {\n  data: function data() {\n    return {\n      Price: Price,\n      loading: true,\n      nodatas: true,\n      dialogVisible: false,\n      //出详细菜单\n      deta_load: -1,\n      //查看详细菜单\n      rece_load: -1,\n      //接单\n      check_load: -1,\n      //结账\n      nodvalue: '没有订单数据',\n      tablist: ['交易时间', '桌号', '菜单详情', '交易金额(元)', '交易状态'],\n      tabcont: [],\n      user_menu: [],\n      //用户详细菜单\n      dingdan: 0,\n      //订单提醒\n      currentOrder: null,\n      changedOrders: new Set() // 用于记录状态发生变化的订单ID\n    };\n  },\n  computed: _objectSpread({}, mapGetters(['currentMerchant'])),\n  methods: {\n    // 获取订单\n    obtainorder: function () {\n      var _obtainorder = _asyncToGenerator(/*#__PURE__*/regeneratorRuntime.mark(function _callee(vle) {\n        var oldPage, params, res;\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              oldPage = this.pagenum;\n              _context.prev = 1;\n              params = {\n                start: (this.pagenum - 1) * this.pageSize,\n                // 计算start\n                pageSize: this.pageSize,\n                merchantId: this.currentMerchant.id\n              };\n              _context.next = 5;\n              return new this.Request('/admin/order/list').modepost(params);\n            case 5:\n              res = _context.sent;\n              console.log('获取订单列表响应：', res);\n              if (res.code === 0) {\n                this.nodatas = res.orderList && res.orderList.length > 0;\n                this.tabcont = res.orderList || [];\n                this.total = res.total || 0;\n                this.loading = false;\n                if (vle == 1) {\n                  localStorage.setItem('order_num', 0);\n                  this.$store.commit('order_remind', 0);\n                }\n              } else {\n                this.$message.error(res.msg || '获取订单列表失败');\n                this.pagenum = oldPage;\n              }\n              _context.next = 15;\n              break;\n            case 10:\n              _context.prev = 10;\n              _context.t0 = _context[\"catch\"](1);\n              console.error('获取订单列表失败：', _context.t0);\n              this.$message.error('服务器发生错误,请重试');\n              this.pagenum = oldPage;\n            case 15:\n              this.loading = false;\n            case 16:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee, this, [[1, 10]]);\n      }));\n      function obtainorder(_x) {\n        return _obtainorder.apply(this, arguments);\n      }\n      return obtainorder;\n    }(),\n    // 查看详细菜单\n    detailed_menu: function () {\n      var _detailed_menu = _asyncToGenerator(/*#__PURE__*/regeneratorRuntime.mark(function _callee2(index, id) {\n        var res, order;\n        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) switch (_context2.prev = _context2.next) {\n            case 0:\n              this.deta_load = index;\n              _context2.prev = 1;\n              // 打印调试信息\n              console.log('订单ID:', id);\n              console.log('订单信息:', this.tabcont[index]);\n              _context2.next = 6;\n              return new this.Request('/admin/orderDetail/list', {\n                id: id\n              }).modeget();\n            case 6:\n              res = _context2.sent;\n              console.log('订单详情响应：', res);\n              if (res.code === 0) {\n                order = this.tabcont[index];\n                this.currentOrder = _objectSpread(_objectSpread({}, order), {}, {\n                  order_time: order.create_time\n                });\n                // 处理订单详情数据\n                this.user_menu = res.list.map(function (item) {\n                  return {\n                    id: item.id,\n                    name: item.name || '未知菜品',\n                    quantity: item.quantity || 0,\n                    price: item.price || 0,\n                    unit: item.unit || '份',\n                    total_price: item.quantity * item.price || 0\n                  };\n                });\n                this.dialogVisible = true;\n              } else {\n                this.$message.error(res.msg || '获取订单详情失败');\n              }\n              _context2.next = 15;\n              break;\n            case 11:\n              _context2.prev = 11;\n              _context2.t0 = _context2[\"catch\"](1);\n              console.error('获取订单详情失败：', _context2.t0);\n              this.$message.error('服务器发生错误，请重试');\n            case 15:\n              _context2.prev = 15;\n              this.deta_load = -1;\n              return _context2.finish(15);\n            case 18:\n            case \"end\":\n              return _context2.stop();\n          }\n        }, _callee2, this, [[1, 11, 15, 18]]);\n      }));\n      function detailed_menu(_x2, _x3) {\n        return _detailed_menu.apply(this, arguments);\n      }\n      return detailed_menu;\n    }(),\n    // 接单状态切换\n    receiving: function () {\n      var _receiving = _asyncToGenerator(/*#__PURE__*/regeneratorRuntime.mark(function _callee3(index) {\n        var order, newStatus, res;\n        return regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.prev = 0;\n              order = this.tabcont[index];\n              newStatus = order.status == 2 ? 1 : 2; // 调用后端接口\n              _context3.next = 5;\n              return new this.Request('/admin/order/receiving', {\n                id: order.id,\n                status: newStatus\n              }).modepost();\n            case 5:\n              res = _context3.sent;\n              if (res.code === 0) {\n                // 后端更新成功后，再更新前端状态\n                order.status = newStatus;\n                this.$forceUpdate();\n                this.$message.success(newStatus === 2 ? '接单成功' : '取消接单成功');\n              } else {\n                this.$message.error(res.msg || '操作失败');\n              }\n              _context3.next = 13;\n              break;\n            case 9:\n              _context3.prev = 9;\n              _context3.t0 = _context3[\"catch\"](0);\n              console.error('订单状态修改失败：', _context3.t0);\n              this.$message.error('服务器发生错误，请重试');\n            case 13:\n            case \"end\":\n              return _context3.stop();\n          }\n        }, _callee3, this, [[0, 9]]);\n      }));\n      function receiving(_x4) {\n        return _receiving.apply(this, arguments);\n      }\n      return receiving;\n    }(),\n    // 结账\n    checkout: function () {\n      var _checkout = _asyncToGenerator(/*#__PURE__*/regeneratorRuntime.mark(function _callee4(index, id) {\n        var res;\n        return regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) switch (_context4.prev = _context4.next) {\n            case 0:\n              this.check_load = index;\n              _context4.prev = 1;\n              _context4.next = 4;\n              return new this.Request('/admin/order/checkout', {\n                id: id,\n                status: 3 // 3表示已完成状态\n              }).modepost();\n            case 4:\n              res = _context4.sent;\n              if (res.code === 0) {\n                this.$set(this.tabcont[index], 'status', 3);\n                this.$message.success('完成订单成功');\n              } else {\n                this.$message.error(res.msg || '完成订单失败');\n              }\n              _context4.next = 12;\n              break;\n            case 8:\n              _context4.prev = 8;\n              _context4.t0 = _context4[\"catch\"](1);\n              console.error('完成订单失败：', _context4.t0);\n              this.$message.error('服务器发生错误,请重试');\n            case 12:\n              this.check_load = -1;\n            case 13:\n            case \"end\":\n              return _context4.stop();\n          }\n        }, _callee4, this, [[1, 8]]);\n      }));\n      function checkout(_x5, _x6) {\n        return _checkout.apply(this, arguments);\n      }\n      return checkout;\n    }(),\n    // 刷新订单\n    refresh_order: function refresh_order() {\n      this.loading = true;\n      this.deta_load = -1; //查看详细菜单\n      this.rece_load = -1; //接单\n      this.check_load = -1; //结账\n      this.obtainorder(1);\n    },\n    formatDate: function formatDate(date) {\n      if (!date) return '--';\n      var d = new Date(date);\n      var year = d.getFullYear();\n      var month = String(d.getMonth() + 1).padStart(2, '0');\n      var day = String(d.getDate()).padStart(2, '0');\n      var hour = String(d.getHours()).padStart(2, '0');\n      var minute = String(d.getMinutes()).padStart(2, '0');\n      return \"\".concat(year, \"-\").concat(month, \"-\").concat(day, \" \").concat(hour, \":\").concat(minute);\n    },\n    formatPrice: function formatPrice(price) {\n      if (!price) return '0.00';\n      return this.Price(price);\n    },\n    // 获取状态类型\n    getStatusType: function getStatusType(status) {\n      var types = {\n        '1': 'warning',\n        '2': 'success',\n        '3': 'info',\n        '4': 'danger'\n      };\n      return types[status] || 'info';\n    },\n    // 获取状态文本\n    getStatusText: function getStatusText(status) {\n      if (!status) return '未知';\n      var texts = {\n        '1': '待支付',\n        '2': '已支付',\n        '3': '已完成',\n        '4': '已取消'\n      };\n      return texts[status] || '未知';\n    },\n    // 分页切换\n    currentchange: function currentchange(e) {\n      this.pagenum = e;\n      this.obtainorder(0);\n    },\n    // 每页条数改变\n    handleSizeChange: function handleSizeChange(val) {\n      this.pageSize = val;\n      this.pagenum = 1; // 重置到第一页\n      this.obtainorder(0);\n    },\n    // 保存状态到数据库\n    saveStatusToDatabase: function () {\n      var _saveStatusToDatabase = _asyncToGenerator(/*#__PURE__*/regeneratorRuntime.mark(function _callee5() {\n        var _iterator, _step, order, res;\n        return regeneratorRuntime.wrap(function _callee5$(_context5) {\n          while (1) switch (_context5.prev = _context5.next) {\n            case 0:\n              if (!(this.changedOrders.size === 0)) {\n                _context5.next = 2;\n                break;\n              }\n              return _context5.abrupt(\"return\");\n            case 2:\n              _context5.prev = 2;\n              // 只保存发生变化的订单状态，但排除接单状态的变化\n              _iterator = _createForOfIteratorHelper(this.tabcont);\n              _context5.prev = 4;\n              _iterator.s();\n            case 6:\n              if ((_step = _iterator.n()).done) {\n                _context5.next = 21;\n                break;\n              }\n              order = _step.value;\n              if (!(this.changedOrders.has(order.id) && order.status !== 1 && order.status !== 2)) {\n                _context5.next = 19;\n                break;\n              }\n              _context5.prev = 9;\n              _context5.next = 12;\n              return new this.Request('/admin/order/checkout').modepost({\n                id: order.id,\n                status: order.status\n              });\n            case 12:\n              res = _context5.sent;\n              if (res.code !== 0) {\n                console.error(\"\\u8BA2\\u5355 \".concat(order.id, \" \\u72B6\\u6001\\u4FDD\\u5B58\\u5931\\u8D25\\uFF1A\").concat(res.msg));\n              }\n              _context5.next = 19;\n              break;\n            case 16:\n              _context5.prev = 16;\n              _context5.t0 = _context5[\"catch\"](9);\n              console.error(\"\\u8BA2\\u5355 \".concat(order.id, \" \\u72B6\\u6001\\u4FDD\\u5B58\\u5931\\u8D25\\uFF1A\"), _context5.t0);\n            case 19:\n              _context5.next = 6;\n              break;\n            case 21:\n              _context5.next = 26;\n              break;\n            case 23:\n              _context5.prev = 23;\n              _context5.t1 = _context5[\"catch\"](4);\n              _iterator.e(_context5.t1);\n            case 26:\n              _context5.prev = 26;\n              _iterator.f();\n              return _context5.finish(26);\n            case 29:\n              _context5.next = 34;\n              break;\n            case 31:\n              _context5.prev = 31;\n              _context5.t2 = _context5[\"catch\"](2);\n              console.error('保存订单状态失败：', _context5.t2);\n            case 34:\n              _context5.prev = 34;\n              this.changedOrders.clear();\n              this.obtainorder(0);\n              return _context5.finish(34);\n            case 38:\n            case \"end\":\n              return _context5.stop();\n          }\n        }, _callee5, this, [[2, 31, 34, 38], [4, 23, 26, 29], [9, 16]]);\n      }));\n      function saveStatusToDatabase() {\n        return _saveStatusToDatabase.apply(this, arguments);\n      }\n      return saveStatusToDatabase;\n    }()\n  },\n  created: function created() {\n    // 获取订单\n    this.obtainorder(0);\n    // 订单提醒\n    this.dingdan = localStorage.getItem(\"order_num\");\n  },\n  beforeDestroy: function beforeDestroy() {\n    // 在组件销毁前保存状态到数据库\n    this.saveStatusToDatabase();\n  },\n  watch: {\n    // 听订单提醒\n    \"$store.state.remind\": function $storeStateRemind(newValue, oldValue) {\n      this.dingdan = newValue.num;\n    }\n  }\n};",{"version":3,"names":["staff","mapGetters","Price","require","data","loading","nodatas","dialogVisible","deta_load","rece_load","check_load","nodvalue","tablist","tabcont","user_menu","dingdan","currentOrder","changedOrders","Set","computed","_objectSpread","methods","obtainorder","_obtainorder","_asyncToGenerator","regeneratorRuntime","mark","_callee","vle","oldPage","params","res","wrap","_callee$","_context","prev","next","pagenum","start","pageSize","merchantId","currentMerchant","id","Request","modepost","sent","console","log","code","orderList","length","total","localStorage","setItem","$store","commit","$message","error","msg","t0","stop","_x","apply","arguments","detailed_menu","_detailed_menu","_callee2","index","order","_callee2$","_context2","modeget","order_time","create_time","list","map","item","name","quantity","price","unit","total_price","finish","_x2","_x3","receiving","_receiving","_callee3","newStatus","_callee3$","_context3","status","$forceUpdate","success","_x4","checkout","_checkout","_callee4","_callee4$","_context4","$set","_x5","_x6","refresh_order","formatDate","date","d","Date","year","getFullYear","month","String","getMonth","padStart","day","getDate","hour","getHours","minute","getMinutes","concat","formatPrice","getStatusType","types","getStatusText","texts","currentchange","e","handleSizeChange","val","saveStatusToDatabase","_saveStatusToDatabase","_callee5","_iterator","_step","_callee5$","_context5","size","abrupt","_createForOfIteratorHelper","s","n","done","value","has","t1","f","t2","clear","created","getItem","beforeDestroy","watch","$storeStateRemind","newValue","oldValue","num"],"sources":["src/page/order/order.vue"],"sourcesContent":["<template>\n\t<div class=\"ordering\" v-loading.fullscreen.lock=\"loading\">\n\t\t<div class=\"heading\">订单管理</div>\n\t\t<div class=\"content-view\">\n\t\t\t<!-- 操作区域 -->\n\t\t\t<div class=\"query-view\">\n\t\t\t\t<div class=\"quotation-query\">\n\t\t\t\t\t<el-button type=\"warning\" size=\"medium\" @click=\"refresh_order()\">刷新订单</el-button>\n\t\t\t\t</div>\n\t\t\t</div>\n\n\t\t\t<!-- 订单列表 -->\n\t\t\t<div v-if=\"nodatas\">\n\t\t\t\t<el-table\n\t\t\t\t\t:data=\"tabcont\"\n\t\t\t\t\tstyle=\"width: 100%\"\n\t\t\t\t\tborder\n\t\t\t\t\tstripe\n\t\t\t\t\tv-loading=\"loading\">\n\t\t\t\t\t<el-table-column\n\t\t\t\t\t\tprop=\"order_no\"\n\t\t\t\t\t\tlabel=\"订单号\"\n\t\t\t\t\t\twidth=\"180\">\n\t\t\t\t\t</el-table-column>\n\t\t\t\t\t<el-table-column\n\t\t\t\t\t\tlabel=\"下单时间\"\n\t\t\t\t\t\twidth=\"160\">\n\t\t\t\t\t\t<template slot-scope=\"scope\">\n\t\t\t\t\t\t\t{{formatDate(scope.row.create_time)}}\n\t\t\t\t\t\t</template>\n\t\t\t\t\t</el-table-column>\n\t\t\t\t\t<el-table-column\n\t\t\t\t\t\tlabel=\"桌号\"\n\t\t\t\t\t\twidth=\"100\">\n\t\t\t\t\t\t<template slot-scope=\"scope\">\n\t\t\t\t\t\t\t{{scope.row.table_number || '--'}}\n\t\t\t\t\t\t</template>\n\t\t\t\t\t</el-table-column>\n\t\t\t\t\t<el-table-column\n\t\t\t\t\t\tlabel=\"订单金额\"\n\t\t\t\t\t\twidth=\"120\">\n\t\t\t\t\t\t<template slot-scope=\"scope\">\n\t\t\t\t\t\t\t¥{{formatPrice(scope.row.total_amount)}}\n\t\t\t\t\t\t</template>\n\t\t\t\t\t</el-table-column>\n\t\t\t\t\t<el-table-column\n\t\t\t\t\t\tlabel=\"订单状态\"\n\t\t\t\t\t\twidth=\"120\">\n\t\t\t\t\t\t<template slot-scope=\"scope\">\n\t\t\t\t\t\t\t<el-tag :type=\"getStatusType(scope.row.status)\">\n\t\t\t\t\t\t\t\t{{getStatusText(scope.row.status)}}\n\t\t\t\t\t\t\t</el-tag>\n\t\t\t\t\t\t</template>\n\t\t\t\t\t</el-table-column>\n\t\t\t\t\t<el-table-column\n\t\t\t\t\t\tlabel=\"操作\"\n\t\t\t\t\t\twidth=\"250\">\n\t\t\t\t\t\t<template slot-scope=\"scope\">\n\t\t\t\t\t\t\t<el-button\n\t\t\t\t\t\t\t\tsize=\"mini\"\n\t\t\t\t\t\t\t\ttype=\"primary\"\n\t\t\t\t\t\t\t\t@click=\"detailed_menu(scope.$index, scope.row.id)\"\n\t\t\t\t\t\t\t\t:loading=\"scope.$index == deta_load\">\n\t\t\t\t\t\t\t\t查看详情\n\t\t\t\t\t\t\t</el-button>\n\t\t\t\t\t\t\t<el-button\n\t\t\t\t\t\t\t\tsize=\"mini\"\n\t\t\t\t\t\t\t\t:type=\"scope.row.status == 2 ? 'info' : 'success'\"\n\t\t\t\t\t\t\t\tv-if=\"scope.row.status == 1 || scope.row.status == 2\"\n\t\t\t\t\t\t\t\t@click=\"receiving(scope.$index)\">\n\t\t\t\t\t\t\t\t{{scope.row.status == 2 ? '已接单' : '接单'}}\n\t\t\t\t\t\t\t</el-button>\n\t\t\t\t\t\t\t<el-button\n\t\t\t\t\t\t\t\tsize=\"mini\"\n\t\t\t\t\t\t\t\ttype=\"warning\"\n\t\t\t\t\t\t\t\tv-if=\"scope.row.status == 2\"\n\t\t\t\t\t\t\t\t@click=\"checkout(scope.$index, scope.row.id)\"\n\t\t\t\t\t\t\t\t:loading=\"scope.$index == check_load\">\n\t\t\t\t\t\t\t\t完成订单\n\t\t\t\t\t\t\t</el-button>\n\t\t\t\t\t\t</template>\n\t\t\t\t\t</el-table-column>\n\t\t\t\t</el-table>\n\t\t\t</div>\n\n\t\t\t<!-- 订单详情弹窗 -->\n\t\t\t<el-dialog\n\t\t\t\ttitle=\"订单详情\"\n\t\t\t\t:visible.sync=\"dialogVisible\"\n\t\t\t\twidth=\"600px\"\n\t\t\t\t:center=\"true\">\n\t\t\t\t<div v-if=\"currentOrder\" class=\"order-detail\">\n\t\t\t\t\t<div class=\"detail-header\">\n\t\t\t\t\t\t<div class=\"detail-item\">\n\t\t\t\t\t\t\t<span class=\"label\">订单号：</span>\n\t\t\t\t\t\t\t<span>{{currentOrder.order_no}}</span>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div class=\"detail-item\">\n\t\t\t\t\t\t\t<span class=\"label\">下单时间：</span>\n\t\t\t\t\t\t\t<span>{{formatDate(currentOrder.order_time)}}</span>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div class=\"detail-item\">\n\t\t\t\t\t\t\t<span class=\"label\">桌号：</span>\n\t\t\t\t\t\t\t<span>{{currentOrder.table_number}}</span>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div class=\"detail-item\">\n\t\t\t\t\t\t\t<span class=\"label\">用餐人数：</span>\n\t\t\t\t\t\t\t<span>{{currentOrder.number_of_diners || '--'}}</span>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<el-divider></el-divider>\n\t\t\t\t\t<div class=\"menu-list\">\n\t\t\t\t\t\t<el-table\n\t\t\t\t\t\t\t:data=\"user_menu\"\n\t\t\t\t\t\t\tborder\n\t\t\t\t\t\t\tstyle=\"width: 100%\">\n\t\t\t\t\t\t\t<el-table-column\n\t\t\t\t\t\t\t\tprop=\"name\"\n\t\t\t\t\t\t\t\tlabel=\"菜品名称\"\n\t\t\t\t\t\t\t\twidth=\"180\">\n\t\t\t\t\t\t\t\t<template slot-scope=\"scope\">\n\t\t\t\t\t\t\t\t\t{{scope.row.name || '未知菜品'}}\n\t\t\t\t\t\t\t\t</template>\n\t\t\t\t\t\t\t</el-table-column>\n\t\t\t\t\t\t\t<el-table-column\n\t\t\t\t\t\t\t\tprop=\"quantity\"\n\t\t\t\t\t\t\t\tlabel=\"数量\"\n\t\t\t\t\t\t\t\twidth=\"100\">\n\t\t\t\t\t\t\t\t<template slot-scope=\"scope\">\n\t\t\t\t\t\t\t\t\t{{scope.row.quantity}}{{scope.row.unit}}\n\t\t\t\t\t\t\t\t</template>\n\t\t\t\t\t\t\t</el-table-column>\n\t\t\t\t\t\t\t<el-table-column\n\t\t\t\t\t\t\t\tprop=\"price\"\n\t\t\t\t\t\t\t\tlabel=\"单价\"\n\t\t\t\t\t\t\t\twidth=\"100\">\n\t\t\t\t\t\t\t\t<template slot-scope=\"scope\">\n\t\t\t\t\t\t\t\t\t¥{{formatPrice(scope.row.price)}}\n\t\t\t\t\t\t\t\t</template>\n\t\t\t\t\t\t\t</el-table-column>\n\t\t\t\t\t\t\t<el-table-column\n\t\t\t\t\t\t\t\tlabel=\"小计\"\n\t\t\t\t\t\t\t\twidth=\"100\">\n\t\t\t\t\t\t\t\t<template slot-scope=\"scope\">\n\t\t\t\t\t\t\t\t\t¥{{formatPrice(scope.row.price * scope.row.quantity)}}\n\t\t\t\t\t\t\t\t</template>\n\t\t\t\t\t\t\t</el-table-column>\n\t\t\t\t\t\t</el-table>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class=\"detail-footer\">\n\t\t\t\t\t\t<div class=\"total-amount\">\n\t\t\t\t\t\t\t<span class=\"label\">订单总额：</span>\n\t\t\t\t\t\t\t<span class=\"amount\">¥{{formatPrice(currentOrder.total_amount)}}</span>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</el-dialog>\n\t\t</div>\n\t\t<div style=\"height: 120px;\"></div>\n\t</div>\n</template>\n\n<script>\n// 交状态\nimport {staff} from '../../../config/state-type.js'\nimport { mapGetters } from 'vuex'\n// 价格补领\nconst Price = require('e-commerce_price')\nexport default{\n\tdata() {\n\t\treturn {\n\t\t\tPrice:Price,\n\t\t\tloading: true,\n\t\t\tnodatas:true,\n\t\t\tdialogVisible:false,//出详细菜单\n\t\t\tdeta_load:-1,//查看详细菜单\n\t\t\trece_load:-1,//接单\n\t\t\tcheck_load:-1,//结账\n\t\t\tnodvalue:'没有订单数据',\n\t\t\ttablist:['交易时间','桌号','菜单详情','交易金额(元)','交易状态'],\n\t\t\ttabcont:[],\n\t\t\tuser_menu:[],//用户详细菜单\n\t\t\tdingdan:0,//订单提醒\n\t\t\tcurrentOrder: null,\n\t\t\tchangedOrders: new Set(), // 用于记录状态发生变化的订单ID\n\t\t}\n\t},\n\tcomputed: {\n\t\t...mapGetters(['currentMerchant'])\n\t},\n\tmethods:{\n\t\t// 获取订单\n\t\tasync obtainorder(vle){\n\t\t\tconst oldPage = this.pagenum\n\t\t\ttry{\n\t\t\t\tconst params = {\n\t\t\t\t\tstart: (this.pagenum - 1) * this.pageSize, // 计算start\n\t\t\t\t\tpageSize: this.pageSize,\n\t\t\t\t\tmerchantId: this.currentMerchant.id\n\t\t\t\t}\n\t\t\t\tlet res = await new this.Request('/admin/order/list').modepost(params)\n\t\t\t\tconsole.log('获取订单列表响应：', res)\n\t\t\t\tif (res.code === 0) {\n\t\t\t\t\tthis.nodatas = res.orderList && res.orderList.length > 0\n\t\t\t\t\tthis.tabcont = res.orderList || []\n\t\t\t\t\tthis.total = res.total || 0\n\t\t\t\t\tthis.loading = false\n\t\t\t\t\tif(vle == 1){\n\t\t\t\t\t\tlocalStorage.setItem('order_num',0)\n\t\t\t\t\t\tthis.$store.commit('order_remind',0)\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tthis.$message.error(res.msg || '获取订单列表失败')\n\t\t\t\t\tthis.pagenum = oldPage\n\t\t\t\t}\n\t\t\t}catch(e){\n\t\t\t\tconsole.error('获取订单列表失败：', e)\n\t\t\t\tthis.$message.error('服务器发生错误,请重试')\n\t\t\t\tthis.pagenum = oldPage\n\t\t\t}\n\t\t\tthis.loading = false\n\t\t},\n\t\t// 查看详细菜单\n\t\tasync detailed_menu(index, id){\n\t\t\tthis.deta_load = index\n\t\t\ttry{\n\t\t\t\t// 打印调试信息\n\t\t\t\tconsole.log('订单ID:', id)\n\t\t\t\tconsole.log('订单信息:', this.tabcont[index])\n\t\t\t\t\n\t\t\t\tlet res = await new this.Request('/admin/orderDetail/list', { id: id }).modeget()\n\t\t\t\tconsole.log('订单详情响应：', res)\n\t\t\t\tif (res.code === 0) {\n\t\t\t\t\tconst order = this.tabcont[index]\n\t\t\t\t\tthis.currentOrder = {\n\t\t\t\t\t\t...order,\n\t\t\t\t\t\torder_time: order.create_time\n\t\t\t\t\t}\n\t\t\t\t\t// 处理订单详情数据\n\t\t\t\t\tthis.user_menu = res.list.map(item => ({\n\t\t\t\t\t\tid: item.id,\n\t\t\t\t\t\tname: item.name || '未知菜品',\n\t\t\t\t\t\tquantity: item.quantity || 0,\n\t\t\t\t\t\tprice: item.price || 0,\n\t\t\t\t\t\tunit: item.unit || '份',\n\t\t\t\t\t\ttotal_price: (item.quantity * item.price) || 0\n\t\t\t\t\t}))\n\t\t\t\t\tthis.dialogVisible = true\n\t\t\t\t} else {\n\t\t\t\t\tthis.$message.error(res.msg || '获取订单详情失败')\n\t\t\t\t}\n\t\t\t} catch(e) {\n\t\t\t\tconsole.error('获取订单详情失败：', e)\n\t\t\t\tthis.$message.error('服务器发生错误，请重试')\n\t\t\t} finally {\n\t\t\t\tthis.deta_load = -1\n\t\t\t}\n\t\t},\n\t\t// 接单状态切换\n\t\tasync receiving(index){\n\t\t\ttry {\n\t\t\t\tconst order = this.tabcont[index]\n\t\t\t\tconst newStatus = order.status == 2 ? 1 : 2\n\t\t\t\t\n\t\t\t\t// 调用后端接口\n\t\t\t\tconst res = await new this.Request('/admin/order/receiving', {\n\t\t\t\t\tid: order.id,\n\t\t\t\t\tstatus: newStatus\n\t\t\t\t}).modepost()\n\t\t\t\t\n\t\t\t\tif (res.code === 0) {\n\t\t\t\t\t// 后端更新成功后，再更新前端状态\n\t\t\t\t\torder.status = newStatus\n\t\t\t\t\tthis.$forceUpdate()\n\t\t\t\t\tthis.$message.success(newStatus === 2 ? '接单成功' : '取消接单成功')\n\t\t\t\t} else {\n\t\t\t\t\tthis.$message.error(res.msg || '操作失败')\n\t\t\t\t}\n\t\t\t} catch(e) {\n\t\t\t\tconsole.error('订单状态修改失败：', e)\n\t\t\t\tthis.$message.error('服务器发生错误，请重试')\n\t\t\t}\n\t\t},\n\t\t// 结账\n\t\tasync checkout(index,id){\n\t\t\tthis.check_load = index\n\t\t\ttry{\n\t\t\t\tlet res = await new this.Request('/admin/order/checkout', {\n\t\t\t\t\tid: id,\n\t\t\t\t\tstatus: 3  // 3表示已完成状态\n\t\t\t\t}).modepost()\n\t\t\t\t\n\t\t\t\tif (res.code === 0) {\n\t\t\t\t\tthis.$set(this.tabcont[index],'status', 3)\n\t\t\t\t\tthis.$message.success('完成订单成功')\n\t\t\t\t} else {\n\t\t\t\t\tthis.$message.error(res.msg || '完成订单失败')\n\t\t\t\t}\n\t\t\t}catch(e){\n\t\t\t\tconsole.error('完成订单失败：', e)\n\t\t\t\tthis.$message.error('服务器发生错误,请重试')\n\t\t\t}\n\t\t\tthis.check_load = -1\n\t\t},\n\t\t// 刷新订单\n\t\trefresh_order(){\n\t\t\tthis.loading = true\n\t\t\tthis.deta_load = -1//查看详细菜单\n\t\t\tthis.rece_load = -1//接单\n\t\t\tthis.check_load = -1//结账\n\t\t\tthis.obtainorder(1)\n\t\t},\n\t\tformatDate(date) {\n\t\t\tif (!date) return '--';\n\t\t\tconst d = new Date(date);\n\t\t\tconst year = d.getFullYear();\n\t\t\tconst month = String(d.getMonth() + 1).padStart(2, '0');\n\t\t\tconst day = String(d.getDate()).padStart(2, '0');\n\t\t\tconst hour = String(d.getHours()).padStart(2, '0');\n\t\t\tconst minute = String(d.getMinutes()).padStart(2, '0');\n\t\t\treturn `${year}-${month}-${day} ${hour}:${minute}`;\n\t\t},\n\t\tformatPrice(price) {\n\t\t\tif (!price) return '0.00';\n\t\t\treturn this.Price(price);\n\t\t},\n\t\t// 获取状态类型\n\t\tgetStatusType(status) {\n\t\t\tconst types = {\n\t\t\t\t'1': 'warning',\n\t\t\t\t'2': 'success',\n\t\t\t\t'3': 'info',\n\t\t\t\t'4': 'danger'\n\t\t\t}\n\t\t\treturn types[status] || 'info'\n\t\t},\n\t\t// 获取状态文本\n\t\tgetStatusText(status) {\n\t\t\tif (!status) return '未知';\n\t\t\tconst texts = {\n\t\t\t\t'1': '待支付',\n\t\t\t\t'2': '已支付',\n\t\t\t\t'3': '已完成',\n\t\t\t\t'4': '已取消'\n\t\t\t}\n\t\t\treturn texts[status] || '未知'\n\t\t},\n\t\t// 分页切换\n\t\tcurrentchange(e){\n\t\t\tthis.pagenum = e\n\t\t\tthis.obtainorder(0)\n\t\t},\n\t\t// 每页条数改变\n\t\thandleSizeChange(val) {\n\t\t\tthis.pageSize = val\n\t\t\tthis.pagenum = 1 // 重置到第一页\n\t\t\tthis.obtainorder(0)\n\t\t},\n\t\t// 保存状态到数据库\n\t\tasync saveStatusToDatabase() {\n\t\t\tif (this.changedOrders.size === 0) {\n\t\t\t\treturn\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\t// 只保存发生变化的订单状态，但排除接单状态的变化\n\t\t\t\tfor (let order of this.tabcont) {\n\t\t\t\t\tif (this.changedOrders.has(order.id) && order.status !== 1 && order.status !== 2) {\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\tlet res = await new this.Request('/admin/order/checkout').modepost({\n\t\t\t\t\t\t\t\tid: order.id,\n\t\t\t\t\t\t\t\tstatus: order.status\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\tif (res.code !== 0) {\n\t\t\t\t\t\t\t\tconsole.error(`订单 ${order.id} 状态保存失败：${res.msg}`)\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} catch (err) {\n\t\t\t\t\t\t\tconsole.error(`订单 ${order.id} 状态保存失败：`, err)\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} catch (e) {\n\t\t\t\tconsole.error('保存订单状态失败：', e)\n\t\t\t} finally {\n\t\t\t\tthis.changedOrders.clear()\n\t\t\t\tthis.obtainorder(0)\n\t\t\t}\n\t\t},\n\t},\n\tcreated() {\n\t\t// 获取订单\n\t\tthis.obtainorder(0)\n\t\t// 订单提醒\n\t\tthis.dingdan = localStorage.getItem(\"order_num\")\n\t},\n\tbeforeDestroy() {\n\t\t// 在组件销毁前保存状态到数据库\n\t\tthis.saveStatusToDatabase()\n\t},\n\twatch: {\n\t\t// 听订单提醒\n\t\t\"$store.state.remind\"(newValue, oldValue) {\n\t\t\tthis.dingdan = newValue.num\n\t\t}\n\t},\n}\n</script>\n\n<style scoped=\"scoped\">\n@import url(\"../../../style/pubiss.css\");\n@import url(\"../../../style/popup.css\");\n::v-deep .el-pagination.is-background .el-pager li:not(.disabled).active {\n\tbackground-color: #00be06;\n\tcolor: #fff;\n}\n::v-deep .el-badge{\n\tmargin-right: 5px;\n}\n.menu-padd{\n\tborder-bottom: 1px solid #f8f8f8;\n}\n.Menu-details{\n\tdisplay: flex;\n\talign-items: center;\n\tjustify-content: space-between;\n\tpadding: 0 50px;\n}\n.menu-margin{margin: 20px 0;}\n.menu-span{\n\tfont-weight: bold;\n\tfont-size: 15px;\n\tpadding-top: 20px;\n}\n::v-deep .el-dialog{\n\theight: 600px;\n\toverflow-y: auto;\n\tborder-radius: 5px !important;\n}\n.content-view {\n\tpadding: 20px;\n}\n\n.query-view {\n\tdisplay: flex;\n\talign-items: center;\n\tmargin-bottom: 20px;\n\tbackground: #f5f7fa;\n\tpadding: 15px;\n\tborder-radius: 4px;\n}\n\n.quotation-query {\n\tmargin-right: 20px;\n}\n\n.stat-cards {\n\tmargin-bottom: 20px;\n}\n\n.stat-number {\n\tfont-size: 24px;\n\tfont-weight: bold;\n\tcolor: #409EFF;\n\ttext-align: center;\n}\n\n.pagination-container {\n\tmargin-top: 20px;\n\ttext-align: right;\n}\n\n.order-detail {\n\tpadding: 20px;\n}\n\n.detail-header {\n\tdisplay: grid;\n\tgrid-template-columns: repeat(2, 1fr);\n\tgap: 15px;\n}\n\n.detail-item {\n\tdisplay: flex;\n\talign-items: center;\n}\n\n.detail-item .label {\n\tfont-weight: bold;\n\tmargin-right: 10px;\n\tcolor: #606266;\n}\n\n.menu-list {\n\tmargin: 20px 0;\n}\n\n.detail-footer {\n\ttext-align: right;\n\tmargin-top: 20px;\n}\n\n.total-amount {\n\tfont-size: 16px;\n}\n\n.total-amount .label {\n\tfont-weight: bold;\n\tcolor: #606266;\n}\n\n.total-amount .amount {\n\tcolor: #f56c6c;\n\tfont-size: 20px;\n\tfont-weight: bold;\n}\n\n.el-tag {\n\twidth: 80px;\n\ttext-align: center;\n}\n</style>\n"],"mappings":"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","ignoreList":[]}]}